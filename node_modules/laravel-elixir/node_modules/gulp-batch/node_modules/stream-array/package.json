{
  "name": "stream-array",
  "version": "1.1.0",
  "description": "Pipe an Array through Node.js streams",
  "dependencies": {
    "readable-stream": "~1.1.0"
  },
  "devDependencies": {
    "concat-stream": "~1.4.8",
    "tape": "~4.0.0"
  },
  "scripts": {
    "test": "tape ./test/*",
    "coverage": "covert ./test/*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mimetnet/node-stream-array"
  },
  "bugs": {
    "url": "https://github.com/mimetnet/node-stream-array/issues"
  },
  "keywords": [
    "array",
    "readable",
    "stream",
    "pipe"
  ],
  "author": {
    "name": "Matthew I. Metnetsky",
    "email": "matthew@cowarthill.com"
  },
  "license": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/3.5",
      "firefox/latest",
      "firefox/nightly",
      "chrome/10",
      "chrome/latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "engines": [
    "node >= 0.8.0"
  ],
  "readme": "# stream-array\r\n\r\nPipe an Array through Node.js [Streams][12]. This is rather useful for testing\r\nother streams.\r\n\r\n[![npm version][1]][2]\r\n[![build status][3]][4]\r\n[![dependencies][5]][6]\r\n[![devDependencies][7]][8]\r\n\r\n[//]: [![testling][9]][10]\r\n\r\n\r\n## Usage\r\n\r\n```js\r\nvar streamify = require('stream-array'),\r\n    os = require('os');\r\n\r\nstreamify(['1', '2', '3', os.EOL]).pipe(process.stdout);\r\n```\r\n\r\n\r\n## API\r\n\r\n#### streamify(Array)\r\nThe result of [require][13] is a 'function()' that when invoked, will return a\r\n[Readable][11] [Stream][12].\r\n\r\n```\r\nvar streamify = require('stream-array');\r\n```\r\n\r\nThe source array can contain any type as it is assumed that the receiving\r\nstream can handle it. Each element in the array will be [pushed][14] into the\r\n[piped][15] stream, **without** modifying the source array.\r\n\r\n```\r\nvar readable = streamify(['Hello', new Buffer('World')]);\r\n```\r\n\r\nThis [Stream][12] will [push][14] each element of the source array into the\r\n[piped][15] array.\r\n\r\n```\r\nreadable(['1', '2', '3', os.EOL]).pipe(process.stdout);\r\n```\r\n\r\n```\r\n123\\n\r\n```\r\n\r\n## Install\r\n\r\n```sh\r\nnpm install stream-array\r\n```\r\n\r\n  [1]: https://badge.fury.io/js/stream-array.svg\r\n  [2]: https://badge.fury.io/js/stream-array\r\n  [3]: https://api.travis-ci.org/mimetnet/node-stream-array.svg\r\n  [4]: https://travis-ci.org/mimetnet/node-stream-array\r\n  [5]: https://david-dm.org/mimetnet/node-stream-array.svg\r\n  [6]: https://david-dm.org/mimetnet/node-stream-array\r\n  [7]: https://david-dm.org/mimetnet/node-stream-array/dev-status.svg?#info=devDependencies\r\n  [8]: https://david-dm.org/mimetnet/node-stream-array/#info=devDependencies\r\n  [//]: https://ci.testling.com/mimetnet/node-stream-array.png\r\n  [//]: https://ci.testling.com/mimetnet/node-stream-array\r\n  [11]: http://nodejs.org/api/stream.html#stream_class_stream_readable\r\n  [12]: http://nodejs.org/api/stream.html#stream_stream\r\n  [13]: http://nodejs.org/api/globals.html#globals_require\r\n  [14]: https://nodejs.org/api/stream.html#stream_readable_push_chunk_encoding\r\n  [15]: https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\r\n\r\n## License\r\n\r\n[MIT License](https://github.com/mimetnet/node-stream-array/blob/master/LICENSE)\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mimetnet/node-stream-array",
  "_id": "stream-array@1.1.0",
  "dist": {
    "shasum": "300bd01dbb7e3d2a03565e3ef244f456dc1c68f1"
  },
  "_from": "stream-array@^1.0.1",
  "_resolved": "https://registry.npmjs.org/stream-array/-/stream-array-1.1.0.tgz"
}
